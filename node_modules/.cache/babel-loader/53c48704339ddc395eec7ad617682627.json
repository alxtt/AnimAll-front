{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n  _s();\n\n  const observer = useRef();\n  useEffect(() => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n\n    var cb = function (entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        callback();\n      }\n    };\n\n    observer.current = new IntersectionObserver(cb);\n    observer.current.observe(ref.current);\n  }, [isLoading]);\n};\n\n_s(useObserver, \"mvUvGhiqkPzCYiMPAW/Py9ym/ZY=\");","map":{"version":3,"sources":["C:/Users/User/Documents/AnimAll-react-front/src/hooks/useObserver.js"],"names":["useEffect","useRef","useObserver","ref","canLoad","isLoading","callback","observer","current","disconnect","cb","entries","isIntersecting","IntersectionObserver","observe"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,OAAN,EAAeC,SAAf,EAA0BC,QAA1B,KAAuC;AAAA;;AAC9D,QAAMC,QAAQ,GAAGN,MAAM,EAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,SAAH,EAAc;AACd,QAAGE,QAAQ,CAACC,OAAZ,EAAqBD,QAAQ,CAACC,OAAT,CAAiBC,UAAjB;;AAErB,QAAIC,EAAE,GAAG,UAASC,OAAT,EAAkBJ,QAAlB,EAA4B;AACjC,UAAII,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BR,OAAjC,EAA0C;AACtCE,QAAAA,QAAQ;AACX;AACJ,KAJD;;AAKAC,IAAAA,QAAQ,CAACC,OAAT,GAAmB,IAAIK,oBAAJ,CAAyBH,EAAzB,CAAnB;AACAH,IAAAA,QAAQ,CAACC,OAAT,CAAiBM,OAAjB,CAAyBX,GAAG,CAACK,OAA7B;AACH,GAXQ,EAWN,CAACH,SAAD,CAXM,CAAT;AAYH,CAfM;;GAAMH,W","sourcesContent":["import {useEffect, useRef} from \"react\";\n\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n    const observer = useRef();\n\n    useEffect(() => {\n        if(isLoading) return;\n        if(observer.current) observer.current.disconnect();\n\n        var cb = function(entries, observer) {\n            if (entries[0].isIntersecting && canLoad) {\n                callback()\n            }\n        };\n        observer.current = new IntersectionObserver(cb);\n        observer.current.observe(ref.current)\n    }, [isLoading])\n}\n"]},"metadata":{},"sourceType":"module"}