{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\AnimAll-react-sketch \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\\\src\\\\pages\\\\PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetching } from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchComments, isComLoading, comError] = useFetching(async id => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u044B \\u043E\\u0442\\u043A\\u0440\\u044B\\u043B\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u043F\\u043E\\u0441\\u0442\\u0430 c ID = \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [post.id, \". \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isComLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(comm => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: comm.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: comm.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)]\n      }, comm.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostIdPage, \"yhVFi/dKHvoi/BwHUNtWcOvaQkM=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"sources":["C:/Users/User/Documents/AnimAll-react-sketch — копия/src/pages/PostIdPage.jsx"],"names":["React","useEffect","useState","useParams","useFetching","PostService","Loader","PostIdPage","params","post","setPost","comments","setComments","fetchPostById","isLoading","error","id","response","getById","data","fetchComments","isComLoading","comError","getCommentsByPostId","title","map","comm","marginTop","email","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,aAAD,EAAgBC,SAAhB,EAA2BC,KAA3B,IAAoCX,WAAW,CAAC,MAAOY,EAAP,IAAc;AAChE,UAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBF,EAApB,CAAvB;AACAN,IAAAA,OAAO,CAACO,QAAQ,CAACE,IAAV,CAAP;AACH,GAHoD,CAArD;AAIA,QAAM,CAACC,aAAD,EAAgBC,YAAhB,EAA8BC,QAA9B,IAA0ClB,WAAW,CAAC,MAAOY,EAAP,IAAc;AACtE,UAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACkB,mBAAZ,CAAgCP,EAAhC,CAAvB;AACAJ,IAAAA,WAAW,CAACK,QAAQ,CAACE,IAAV,CAAX;AACH,GAH0D,CAA3D;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,aAAa,CAACL,MAAM,CAACQ,EAAR,CAAb;AACAI,IAAAA,aAAa,CAACZ,MAAM,CAACQ,EAAR,CAAb;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAA,oKAAsCR,MAAM,CAACQ,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,SAAS,gBACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADI,gBAEH;AAAA,iBAAML,IAAI,CAACO,EAAX,QAAiBP,IAAI,CAACe,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJX,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EASKH,YAAY,gBACP,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADO,gBAEP;AAAA,gBACGV,QAAQ,CAACc,GAAT,CAAaC,IAAI,iBACd;AAAmB,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAA1B;AAAA,gCACI;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAMF,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAUH,IAAI,CAACV,EAAf;AAAA;AAAA;AAAA;AAAA,cADH;AADH;AAAA;AAAA;AAAA;AAAA,YAXV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAzCD;;GAAMT,U;UACaJ,S,EAG2BC,W,EAIMA,W;;;KAR9CG,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useFetching} from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\n\nconst PostIdPage = () => {\n    const params = useParams()\n    const [post, setPost] = useState({});\n    const [comments, setComments] = useState([]);\n    const [fetchPostById, isLoading, error] = useFetching(async (id) => {\n        const response = await PostService.getById(id)\n        setPost(response.data);\n    })\n    const [fetchComments, isComLoading, comError] = useFetching(async (id) => {\n        const response = await PostService.getCommentsByPostId(id)\n        setComments(response.data);\n    })\n\n    useEffect(() => {\n        fetchPostById(params.id)\n        fetchComments(params.id)\n    }, [])\n\n    return (\n        <div>\n            <h1>Вы открыли страницу поста c ID = {params.id}</h1>\n            {isLoading\n                ? <Loader/>\n                :  <div>{post.id}. {post.title}</div>\n            }\n            <h1>\n                Комментарии\n            </h1>\n            {isComLoading\n                ? <Loader/>\n                : <div>\n                    {comments.map(comm =>\n                        <div key={comm.id} style={{marginTop: 15}}>\n                            <h5>{comm.email}</h5>\n                            <div>{comm.body}</div>\n                        </div>\n                    )}\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default PostIdPage;\n"]},"metadata":{},"sourceType":"module"}